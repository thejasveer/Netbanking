version: "3.8"

services:
  bank-ui:
    container_name: "bank-ui"
    platforms: linux/amd64,linux/arm64
    build:
      context: .
      dockerfile: ./apps/bank-ui/Dockerfile.bankUi
    # restart: always
    ports:
      - "3003:3003"
    networks:
      - app_network
    env_file:
      - ./dockerEnv/.env.bankUi.dev
    depends_on:
      - bank-server
  # bank-client:
  #   container_name: "bank-client"
     
  #   build:
  #     context: .
  #     dockerfile: ./apps/bank-client/Dockerfile.bankClient
  #   # restart: always
  #   ports:
  #     - "3005:3005"
  #   networks:
  #     - app_network
  #   env_file:
  #     - ./dockerEnv/.env.bankClient.dev
  #   depends_on:
  #     - bank-server
  # transaction-worker:
  #   container_name: "transaction-worker"
  #   build:
  #     context: .
  #     dockerfile: ./apps/transactionWorker/Dockerfile.transactionWorker
    
  #   # restart: always
  #   ports:
  #     - "3006:3006"
 
  #   networks:
  #     - app_network
  #   env_file:
  #     - ./dockerEnv/.env.transactionWorker.dev
  #   depends_on:
  #     - bank-server
  #     - redis
 

  bank-server:
    container_name: "bank-server"
     
    build:
      context: .
      dockerfile: ./apps/bank-server/Dockerfile.bankServer
    # restart: always
    ports:
      - "3004:3004"
    
    env_file:
      - ./dockerEnv/.env.bankServer.dev
  
      
      
    depends_on:
      - redis
    networks:
      - app_network
      
  
  redis:
    image: redis:7.2.4
    command: ["redis-server", "--appendonly", "no"]
    restart: always
    # environment:
      # - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app_network
    ports: 
      - '6379:6379'
    logging:
      driver: none
    volumes:
      - cache:/data

networks:
  app_network:
    external: true
    driver: bridge
volumes:
  cache:
    driver: local
